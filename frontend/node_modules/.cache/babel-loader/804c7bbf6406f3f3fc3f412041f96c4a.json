{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shana\\\\OneDrive\\\\Desktop\\\\task\\\\todo-list\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css'; // Import Components\n\nimport Header from './Components/Header';\nimport ToDoList from './Components/ToDoList';\nimport ToDoInput from './Components/ToDoInput';\nimport Login from './Components/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Array of objects containing the tasks with a ID and complete status\n  const toDoData = [];\n  const [toDoList, setToDoList] = useState(toDoData);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); // Takes in newTask (input by user) from AddTaskToToDoList component’s state. \n  // Makes a copy of the toDoList so the state is not directly manipulated.\n  // The copy is reassigned to a new array, with copy spread in and the new list item tagged on the end\n\n  const addTask = newTask => {\n    let copy = [...toDoList];\n    copy.push({\n      id: toDoList.length + 1,\n      task: newTask,\n      complete: false\n    });\n    setToDoList(copy);\n  }; // Function to toggle the checkbox of the todo item. \n  // A copy of the list is created. The id of the selected task is found and the status of the completed is toggled\n\n\n  const toggleToDo = id => {\n    let copy = [...toDoList];\n    const todoList = copy.find(todoList => todoList.id === id);\n    todoList.complete = !todoList.complete;\n    setToDoList(copy);\n  }; // Function clears the completed items from the todoList\n\n\n  function handleClearCompleted() {\n    // alert(\"Button Clicked\");\n    const uncompletedToDos = toDoList.filter(todo => !todo.complete);\n    setToDoList(uncompletedToDos);\n  }\n\n  function handleUserNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handlePasswordChange(e) {\n    setPassword(e.target.value);\n  }\n\n  function handleLoginButtonClick() {\n    alert(\"clicked\"); // fetch(\"http://localhost:8000/login\",\n    //   {\n    //     headers: {\n    //       'Content-Type': 'application/json'\n    //     },\n    //     method: \"POST\",\n    //     body: JSON.stringify()\n    //   })\n    //   .then(function (res) {\n    //     res.json().then((result) => {\n    //       localStorage.setItem('login', JSON.stringify({ login: true, token: result.token }))\n    //       console.warn(result);\n    // }})\n  }\n\n  function handleCreateUserButtonClick() {\n    alert(\"clicked\");\n  }\n\n  if (!loggedIn) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      handleCreateUserButtonClick: handleCreateUserButtonClick,\n      handleLoginButtonClick: handleLoginButtonClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoListDiv\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ToDoInput, {\n        addTask: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearCompleted,\n        children: \"Clear Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n        toDoList: toDoList,\n        toggleToDo: toggleToDo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(App, \"E7E7djo/7IW5jcbkCxrICQSGNac=\");\n\n_c = App;\n;\nexport default App; // I used this youtube video: https://www.youtube.com/watch?v=hQAHSlTtcmY : \"Learn React in 30 minutes\" by Web Dev simplified\n// and this https://www.educative.io/blog/react-hooks-tutorial-todo-list react hooks todolist blog to assist me in this task\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","ToDoList","ToDoInput","Login","App","toDoData","toDoList","setToDoList","loggedIn","setLoggedIn","name","setName","password","setPassword","addTask","newTask","copy","push","id","length","task","complete","toggleToDo","todoList","find","handleClearCompleted","uncompletedToDos","filter","todo","handleUserNameChange","e","target","value","handlePasswordChange","handleLoginButtonClick","alert","handleCreateUserButtonClick"],"sources":["C:/Users/shana/OneDrive/Desktop/task/todo-list/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n// Import Components\nimport Header from './Components/Header';\nimport ToDoList from './Components/ToDoList';\nimport ToDoInput from './Components/ToDoInput';\nimport Login from './Components/Login';\n\nfunction App() {\n  // Array of objects containing the tasks with a ID and complete status\n  const toDoData = [];\n\n  const [toDoList, setToDoList] = useState(toDoData);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // Takes in newTask (input by user) from AddTaskToToDoList component’s state. \n  // Makes a copy of the toDoList so the state is not directly manipulated.\n  // The copy is reassigned to a new array, with copy spread in and the new list item tagged on the end\n  const addTask = (newTask) => {\n    let copy = [...toDoList];\n    copy.push({id: toDoList.length + 1, task: newTask, complete: false });    \n    setToDoList(copy);\n  }\n\n  // Function to toggle the checkbox of the todo item. \n  // A copy of the list is created. The id of the selected task is found and the status of the completed is toggled\n  const toggleToDo = (id) => {\n    let copy =[...toDoList];\n    const todoList = copy.find(todoList => todoList.id === id);\n    todoList.complete = !todoList.complete;\n    setToDoList(copy);\n  }\n\n  // Function clears the completed items from the todoList\n  function handleClearCompleted() {\n    // alert(\"Button Clicked\");\n    const uncompletedToDos = toDoList.filter(todo => !todo.complete);\n    setToDoList(uncompletedToDos);\n  }\n\n  function handleUserNameChange(e) {\n    setName(e.target.value)\n  }\n\n  function handlePasswordChange(e) {\n    setPassword(e.target.value)\n  }\n\n  function handleLoginButtonClick() {\n    alert(\"clicked\")\n\n    // fetch(\"http://localhost:8000/login\",\n    //   {\n    //     headers: {\n    //       'Content-Type': 'application/json'\n    //     },\n    //     method: \"POST\",\n    //     body: JSON.stringify()\n    //   })\n    //   .then(function (res) {\n    //     res.json().then((result) => {\n    //       localStorage.setItem('login', JSON.stringify({ login: true, token: result.token }))\n    //       console.warn(result);\n    // }})\n  }\n\n  function handleCreateUserButtonClick() {\n    alert(\"clicked\")\n  }\n  \n  if (!loggedIn) {\n    return (\n      <Login\n        handleCreateUserButtonClick={handleCreateUserButtonClick}\n        handleLoginButtonClick={handleLoginButtonClick}\n      />\n    )\n  } else {\n    return (  \n      <div className='todoListDiv'>\n          <Header />\n          {/* Passing toDoList as a prop to toDoList component */}\n          <ToDoInput addTask={addTask}/>\n          <button onClick={handleClearCompleted}>Clear Completed</button>\n          <ToDoList toDoList={toDoList} toggleToDo={toggleToDo}/>\n      </div>\n    )\n  }\n};\n\nexport default App;\n\n// I used this youtube video: https://www.youtube.com/watch?v=hQAHSlTtcmY : \"Learn React in 30 minutes\" by Web Dev simplified\n// and this https://www.educative.io/blog/react-hooks-tutorial-todo-list react hooks todolist blog to assist me in this task"],"mappings":"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"},"metadata":{},"sourceType":"module"}