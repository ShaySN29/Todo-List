{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shana\\\\OneDrive\\\\Desktop\\\\task\\\\todo-list\\\\frontend\\\\src\\\\Components\\\\ToDoInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToDoInput(_ref) {\n  _s();\n\n  let {\n    addTask\n  } = _ref;\n  const [newTask, setNewTask] = useState(''); //  Function handles the local state’s changes. Every time a user types in the input box, the state will change to reflect the most recent input.\n\n  const handleChange = e => {\n    setNewTask(e.currentTarget.value);\n  };\n  /* Add tasks to todolist array\r\n      e.preventDefault() in forms prevents the default action from taking place. \r\n      Prevents the reloading of the page and everything changed will go back to how it initially rendered.\r\n      userInput set back to an empty string after the addTask function has run. This will set the form back to an empty input.\r\n  */\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addTask(newTask);\n    setNewTask(\"\"); // Sets form back to empty after addTask function has run.\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"We'll never share your email with anyone else.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newTask,\n        type: \"text\",\n        onChange: handleChange,\n        placeholder: \"What do you need to do?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ToDoInput, \"dwrfxUhk8xVI/9U/IrHsP3jOUJs=\");\n\n_c = ToDoInput;\n;\nexport default ToDoInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoInput\");","map":{"version":3,"names":["React","useState","Form","Button","ToDoInput","addTask","newTask","setNewTask","handleChange","e","currentTarget","value","handleSubmit","preventDefault"],"sources":["C:/Users/shana/OneDrive/Desktop/task/todo-list/frontend/src/Components/ToDoInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {Form, Button} from 'react-bootstrap'; \r\n\r\nfunction ToDoInput ({ addTask }) {\r\n\r\n    const [ newTask, setNewTask ] = useState('');\r\n\r\n    //  Function handles the local state’s changes. Every time a user types in the input box, the state will change to reflect the most recent input.\r\n    const handleChange = (e) => {\r\n        setNewTask(e.currentTarget.value)\r\n    };\r\n    \r\n    /* Add tasks to todolist array\r\n        e.preventDefault() in forms prevents the default action from taking place. \r\n        Prevents the reloading of the page and everything changed will go back to how it initially rendered.\r\n        userInput set back to an empty string after the addTask function has run. This will set the form back to an empty input.\r\n    */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        addTask(newTask);\r\n        setNewTask(\"\"); // Sets form back to empty after addTask function has run.\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n        <Form.Text className=\"text-muted\">\r\n          We'll never share your email with anyone else.\r\n        </Form.Text>\r\n            </Form.Group>\r\n        </Form>\r\n        <form onSubmit={handleSubmit}>\r\n            {/* Value of input element matches the name of the state variable. */}\r\n            {/* The change handler takes the value here and sets the state every time it changes. */}\r\n            <input value={newTask} type=\"text\" onChange={handleChange} placeholder=\"What do you need to do?\"/>\r\n            <button>Add Task</button>\r\n            </form>  \r\n            </div>    \r\n    );\r\n};  \r\n\r\nexport default ToDoInput;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,iBAA3B;;;AAEA,SAASC,SAAT,OAAiC;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EAE7B,MAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC,CAF6B,CAI7B;;EACA,MAAMO,YAAY,GAAIC,CAAD,IAAO;IACxBF,UAAU,CAACE,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAV;EACH,CAFD;EAIA;AACJ;AACA;AACA;AACA;;;EACI,MAAMC,YAAY,GAAIH,CAAD,IAAO;IACxBA,CAAC,CAACI,cAAF;IACAR,OAAO,CAACC,OAAD,CAAP;IACAC,UAAU,CAAC,EAAD,CAAV,CAHwB,CAGR;EACnB,CAJD;;EAMA,oBACI;IAAA,wBACA,QAAC,IAAD;MAAA,uBACI,QAAC,IAAD,CAAM,KAAN;QAAY,SAAS,EAAC,MAAtB;QAA6B,SAAS,EAAC,gBAAvC;QAAA,wBACJ,QAAC,IAAD,CAAM,KAAN;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADI,eAEJ,QAAC,IAAD,CAAM,OAAN;UAAc,IAAI,EAAC,OAAnB;UAA2B,WAAW,EAAC;QAAvC;UAAA;UAAA;UAAA;QAAA,QAFI,eAGJ,QAAC,IAAD,CAAM,IAAN;UAAW,SAAS,EAAC,YAArB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHI;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADA,eAUA;MAAM,QAAQ,EAAEK,YAAhB;MAAA,wBAGI;QAAO,KAAK,EAAEN,OAAd;QAAuB,IAAI,EAAC,MAA5B;QAAmC,QAAQ,EAAEE,YAA7C;QAA2D,WAAW,EAAC;MAAvE;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAVA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH;;GAvCQJ,S;;KAAAA,S;AAuCR;AAED,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}