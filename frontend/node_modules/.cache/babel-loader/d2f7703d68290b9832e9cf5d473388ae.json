{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shana\\\\OneDrive\\\\Desktop\\\\task\\\\todo-list\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css'; // Import Components\n\nimport Header from './Components/Header';\nimport ToDoList from './Components/ToDoList';\nimport ToDoInput from './Components/ToDoInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Array of objects containing the tasks with a ID and complete status\n  const toDoData = [];\n  const [toDoList, setToDoList] = useState(toDoData); // Takes in newTask (input by user) from AddTaskToToDoList component’s state. \n  // Makes a copy of the toDoList so the state is not directly manipulated.\n  // The copy is reassigned to a new array, with copy spread in and the new list item tagged on the end\n\n  const addTask = newTask => {\n    let copy = [...toDoList];\n    copy.push({\n      id: toDoList.length + 1,\n      task: newTask,\n      complete: false\n    });\n    setToDoList(copy);\n  }; // Function to toggle the checkbox of the todo item. \n  // A copy of the list is created. The id of the selected task is found and the status of the completed is toggled\n\n\n  const toggleToDo = id => {\n    let copy = [...toDoList];\n    const todoList = copy.find(todoList => todoList.id === id);\n    todoList.complete = !todoList.complete;\n    setToDoList(copy);\n  }; // Function clears the completed items from the todoList\n\n\n  function handleClearCompleted() {\n    // alert(\"Button Clicked\");\n    const uncompletedToDos = toDoList.filter(todo => !todo.complete);\n    setToDoList(uncompletedToDos);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoListDiv\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n      toDoList: toDoList,\n      toggleToDo: toggleToDo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoInput, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearCompleted,\n      children: \"Clear Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"zHb3ovLnIeJeGeNQ63WCeg7DCd8=\");\n\n_c = App;\n;\nexport default App; // I used this youtube video: https://www.youtube.com/watch?v=hQAHSlTtcmY : \"Learn React in 30 minutes\" by Web Dev simplified\n// and this https://www.educative.io/blog/react-hooks-tutorial-todo-list react hooks todolist blog to assist me in this task\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","ToDoList","ToDoInput","App","toDoData","toDoList","setToDoList","addTask","newTask","copy","push","id","length","task","complete","toggleToDo","todoList","find","handleClearCompleted","uncompletedToDos","filter","todo"],"sources":["C:/Users/shana/OneDrive/Desktop/task/todo-list/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n// Import Components\nimport Header from './Components/Header';\nimport ToDoList from './Components/ToDoList';\nimport ToDoInput from './Components/ToDoInput';\n\nfunction App() {\n  // Array of objects containing the tasks with a ID and complete status\n  const toDoData = [];\n\n  const [ toDoList, setToDoList ] = useState(toDoData);\n\n  // Takes in newTask (input by user) from AddTaskToToDoList component’s state. \n  // Makes a copy of the toDoList so the state is not directly manipulated.\n  // The copy is reassigned to a new array, with copy spread in and the new list item tagged on the end\n  const addTask = (newTask) => {\n    let copy = [...toDoList];\n    copy.push({id: toDoList.length + 1, task: newTask, complete: false });    \n    setToDoList(copy);\n  }\n\n  // Function to toggle the checkbox of the todo item. \n  // A copy of the list is created. The id of the selected task is found and the status of the completed is toggled\n  const toggleToDo = (id) => {\n    let copy =[...toDoList];\n    const todoList = copy.find(todoList => todoList.id === id);\n    todoList.complete = !todoList.complete;\n    setToDoList(copy);\n  }\n\n  // Function clears the completed items from the todoList\n  function handleClearCompleted() {\n    // alert(\"Button Clicked\");\n    const uncompletedToDos = toDoList.filter(todo => !todo.complete);\n    setToDoList(uncompletedToDos);\n  }\n  \n  return (\n    <div className='todoListDiv'>\n      <Header />\n      {/* Passing toDoList as a prop to toDoList component */}\n      <ToDoList toDoList={toDoList} toggleToDo={toggleToDo}/>\n      <ToDoInput addTask={addTask}/>\n      <button onClick={handleClearCompleted}>Clear Completed</button>\n    </div>\n  );\n};\n\nexport default App;\n\n// I used this youtube video: https://www.youtube.com/watch?v=hQAHSlTtcmY : \"Learn React in 30 minutes\" by Web Dev simplified\n// and this https://www.educative.io/blog/react-hooks-tutorial-todo-list react hooks todolist blog to assist me in this task"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA,MAAMC,QAAQ,GAAG,EAAjB;EAEA,MAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BP,QAAQ,CAACK,QAAD,CAA1C,CAJa,CAMb;EACA;EACA;;EACA,MAAMG,OAAO,GAAIC,OAAD,IAAa;IAC3B,IAAIC,IAAI,GAAG,CAAC,GAAGJ,QAAJ,CAAX;IACAI,IAAI,CAACC,IAAL,CAAU;MAACC,EAAE,EAAEN,QAAQ,CAACO,MAAT,GAAkB,CAAvB;MAA0BC,IAAI,EAAEL,OAAhC;MAAyCM,QAAQ,EAAE;IAAnD,CAAV;IACAR,WAAW,CAACG,IAAD,CAAX;EACD,CAJD,CATa,CAeb;EACA;;;EACA,MAAMM,UAAU,GAAIJ,EAAD,IAAQ;IACzB,IAAIF,IAAI,GAAE,CAAC,GAAGJ,QAAJ,CAAV;IACA,MAAMW,QAAQ,GAAGP,IAAI,CAACQ,IAAL,CAAUD,QAAQ,IAAIA,QAAQ,CAACL,EAAT,KAAgBA,EAAtC,CAAjB;IACAK,QAAQ,CAACF,QAAT,GAAoB,CAACE,QAAQ,CAACF,QAA9B;IACAR,WAAW,CAACG,IAAD,CAAX;EACD,CALD,CAjBa,CAwBb;;;EACA,SAASS,oBAAT,GAAgC;IAC9B;IACA,MAAMC,gBAAgB,GAAGd,QAAQ,CAACe,MAAT,CAAgBC,IAAI,IAAI,CAACA,IAAI,CAACP,QAA9B,CAAzB;IACAR,WAAW,CAACa,gBAAD,CAAX;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,aAAf;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,QAAD;MAAU,QAAQ,EAAEd,QAApB;MAA8B,UAAU,EAAEU;IAA1C;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,SAAD;MAAW,OAAO,EAAER;IAApB;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAQ,OAAO,EAAEW,oBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GAxCQf,G;;KAAAA,G;AAwCR;AAED,eAAeA,GAAf,C,CAEA;AACA"},"metadata":{},"sourceType":"module"}